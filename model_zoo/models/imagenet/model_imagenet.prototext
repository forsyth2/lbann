model {
  name: "dnn"
  objective_function: "cross_entropy"
  num_epochs: 20
  metric {
    categorical_accuracy {
    }
  }
  metric {
    top_k_categorical_accuracy {
      top_k: 5
    }
  }
  data_layout: "data_parallel"
  use_cudnn: false
  layer {
    input_partitioned_minibatch {
    }
    name: "1"
    parent: "1"
    data_layout: "data_parallel"
  }
  #############################################
  layer {
    fully_connected {
      num_neurons: 4096
  #    weight_initialization: "he_normal"
      weight_initialization: "glorot_uniform"
      has_bias: true
  #    l2_regularization_factor: 0.0005
    }
    name: "2"
    parent: "1"
    data_layout: "model_parallel"
  }
  layer {
    relu {
    }
    name: "3"
    parent: "2"
    data_layout: "model_parallel"
  }
  layer {
    dropout {
      keep_prob: 0.9
    }
    name: "4"
    parent: "3"
    data_layout: "model_parallel"
  }
  #############################################
  layer {
    fully_connected {
      num_neurons: 1000
      weight_initialization: "he_normal"
      l2_regularization_factor: 0.0005
    }
    name: "5"
    parent: "4"
    data_layout: "model_parallel"
  }
  layer {
    name: "6"
    parent: "5"
    data_layout: "model_parallel"
    softmax {
    }
  }
  #############################################
  layer {
    name: "7"
    parent: "6"
    data_layout: "data_parallel"
    target_partitioned_minibatch {
      shared_data_reader: true
    }
  }
  #############################################
  mini_batch_size: 256
  callback {
    imcomm {
      intermodel_comm_method: "normal"
      layers: "2 5"
    }
  }
  callback {
    print {
      interval: 1
    }
  }
  callback {
    timer {
    }
  }
  callback {
    summary {
      dir: "."
      batch_interval: 1
      mat_interval: 25
    }
  }
  block_size: 256
  num_gpus: -1
  num_parallel_readers: 12
}
optimizer {
  adagrad {
    learn_rate: 0.0001
    eps: 1e-08
  }
}
