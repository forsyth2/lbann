model {
  name: "dnn"
  objective_function: "mean_squared_error"
  
  data_layout: "model_parallel"
  mini_batch_size: 10
  block_size: 256
  num_epochs: 10
  num_parallel_readers: 0
  procs_per_model: 0
  use_cudnn: true
  num_gpus: -1

  ###################################################
  # Callbacks
  ###################################################
  callback {
    print {
      interval: 1
    }
  }
#  callback {
#    timer {
#    }
#  }
#  callback {
#    save_images {
#      image_dir: "images_"
#      extension: "pgm"
#    }
#  }

  ###################################################
  # start of layers
  ###################################################

  #######
  # INPUT
  #######
  layer {
    name: "1"
    parent: "1"
    data_layout: "model_parallel"
    input_distributed_minibatch {
    }
  }

  # FULLY_CONNECTED encode1
  #################
  layer {
    name: "2"
    parent: "1"
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 1000
      weight_initialization: "glorot_uniform"
      has_bias: true
    }
  }

  # RELU relu1
  ######
  layer {
    name: "3"
    parent: "2"
    data_layout: "model_parallel"
    relu {
    }
  }

  # FULLY_CONNECTED encode2
  #################
  layer {
    name: "5"
    parent: "3"
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 500
      weight_initialization: "glorot_uniform"
      has_bias: true
    }
  }

  # RELU relu2
  #######
  layer {
    name: "6"
    parent: "5"
    data_layout: "model_parallel"
    relu {
    }
  }

  # FULLY_CONNECTED encode3
  #################
  layer {
    name: "8"
    parent: "6"
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 250
      weight_initialization: "glorot_uniform"
      has_bias: true
    }
  }

  #######
  # RELU relu3
  #######
  layer {
    name: "9"
    parent: "8"
    data_layout: "model_parallel"
    relu {
    }
  }

  # FULLY_CONNECTED encode4
  #################
  layer {
    name: "10"
    parent: "9"
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 30
      weight_initialization: "glorot_uniform"
      has_bias: true
    }
  }

  # FULLY_CONNECTED decode4
  #################
  layer {
    name: "11"
    parent: "10"
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 250
      weight_initialization: "glorot_uniform"
      has_bias: true
    }
  }

  # RELU 4
  #######
  layer {
    name: "12"
    parent: "11"
    data_layout: "model_parallel"
    relu {
    }
  }

  # FULLY_CONNECTED decode3
  #################
  layer {
    name: "13"
    parent: "12"
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 500
      weight_initialization: "glorot_uniform"
      has_bias: true
    }
  }


  # RELU relu5
  #######
  layer {
    name: "14"
    parent: "13"
    data_layout: "model_parallel"
    relu {
    }
  }

  # FULLY_CONNECTED decode2
  #################
  layer {
    name: "15"
    parent: "14"
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 1000
      weight_initialization: "glorot_uniform"
      has_bias: true
    }
  }

  # RELU relu6
  #######
  layer {
    name: "16"
    parent: "15"
    data_layout: "model_parallel"
    relu {
    }
  }

  # FULLY_CONNECTED decode1
  #################
  layer {
    name: "17"
    parent: "16"
    data_layout: "model_parallel"
    num_neurons_from_data_reader: true
    fully_connected {
      weight_initialization: "glorot_uniform"
      has_bias: true
    }
  }

  #######
  # SIGMOID sigmoid
  #######
  layer {
    name: "18"
    parent: "17"
    data_layout: "model_parallel"
    sigmoid {
    }
  }

  
  #################
  # RECONSTRUCTION
  #################
  layer {
    name: "19"
    parent: "18"
    data_layout: "model_parallel"
    reconstruction {
      original_layer: 1
    }
  }

  ###################################################
  # end of layers
  ###################################################
}
